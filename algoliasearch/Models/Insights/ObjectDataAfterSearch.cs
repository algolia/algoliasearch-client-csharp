//
// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
//
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Text.Json;
using System.Text.Json.Serialization;
using Algolia.Search.Serializer;

namespace Algolia.Search.Models.Insights;

/// <summary>
/// ObjectDataAfterSearch
/// </summary>
public partial class ObjectDataAfterSearch
{
  /// <summary>
  /// Initializes a new instance of the ObjectDataAfterSearch class.
  /// </summary>
  public ObjectDataAfterSearch() { }

  /// <summary>
  /// Unique identifier for a search query, used to track purchase events with multiple records that originate from different searches.
  /// </summary>
  /// <value>Unique identifier for a search query, used to track purchase events with multiple records that originate from different searches.</value>
  [JsonPropertyName("queryID")]
  public string QueryID { get; set; }

  /// <summary>
  /// Gets or Sets Price
  /// </summary>
  [JsonPropertyName("price")]
  public Price Price { get; set; }

  /// <summary>
  /// Quantity of a product that has been purchased or added to the cart. The total purchase value is the sum of `quantity` multiplied with the `price` for each purchased item.
  /// </summary>
  /// <value>Quantity of a product that has been purchased or added to the cart. The total purchase value is the sum of `quantity` multiplied with the `price` for each purchased item. </value>
  [JsonPropertyName("quantity")]
  public int? Quantity { get; set; }

  /// <summary>
  /// Gets or Sets Discount
  /// </summary>
  [JsonPropertyName("discount")]
  public Discount Discount { get; set; }

  /// <summary>
  /// Returns the string presentation of the object
  /// </summary>
  /// <returns>String presentation of the object</returns>
  public override string ToString()
  {
    StringBuilder sb = new StringBuilder();
    sb.Append("class ObjectDataAfterSearch {\n");
    sb.Append("  QueryID: ").Append(QueryID).Append("\n");
    sb.Append("  Price: ").Append(Price).Append("\n");
    sb.Append("  Quantity: ").Append(Quantity).Append("\n");
    sb.Append("  Discount: ").Append(Discount).Append("\n");
    sb.Append("}\n");
    return sb.ToString();
  }

  /// <summary>
  /// Returns the JSON string presentation of the object
  /// </summary>
  /// <returns>JSON string presentation of the object</returns>
  public virtual string ToJson()
  {
    return JsonSerializer.Serialize(this, JsonConfig.Options);
  }

  /// <summary>
  /// Returns true if objects are equal
  /// </summary>
  /// <param name="obj">Object to be compared</param>
  /// <returns>Boolean</returns>
  public override bool Equals(object obj)
  {
    if (obj is not ObjectDataAfterSearch input)
    {
      return false;
    }

    return (QueryID == input.QueryID || (QueryID != null && QueryID.Equals(input.QueryID)))
      && (Price == input.Price || (Price != null && Price.Equals(input.Price)))
      && (Quantity == input.Quantity || Quantity.Equals(input.Quantity))
      && (Discount == input.Discount || (Discount != null && Discount.Equals(input.Discount)));
  }

  /// <summary>
  /// Gets the hash code
  /// </summary>
  /// <returns>Hash code</returns>
  public override int GetHashCode()
  {
    unchecked // Overflow is fine, just wrap
    {
      int hashCode = 41;
      if (QueryID != null)
      {
        hashCode = (hashCode * 59) + QueryID.GetHashCode();
      }
      if (Price != null)
      {
        hashCode = (hashCode * 59) + Price.GetHashCode();
      }
      hashCode = (hashCode * 59) + Quantity.GetHashCode();
      if (Discount != null)
      {
        hashCode = (hashCode * 59) + Discount.GetHashCode();
      }
      return hashCode;
    }
  }
}
