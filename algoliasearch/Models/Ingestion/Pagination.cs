//
// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
//
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Text.Json;
using System.Text.Json.Serialization;
using Algolia.Search.Serializer;

namespace Algolia.Search.Models.Ingestion;

/// <summary>
/// Paginated API response.
/// </summary>
public partial class Pagination
{
  /// <summary>
  /// Initializes a new instance of the Pagination class.
  /// </summary>
  [JsonConstructor]
  public Pagination() { }

  /// <summary>
  /// Initializes a new instance of the Pagination class.
  /// </summary>
  /// <param name="nbPages">Number of pages in the API response. (required).</param>
  /// <param name="page">Page of the API response to retrieve. (required).</param>
  /// <param name="nbItems">Number of items in the API response. (required).</param>
  /// <param name="itemsPerPage">Number of items per page. (required) (default to 10).</param>
  public Pagination(int nbPages, int page, int nbItems, int itemsPerPage)
  {
    NbPages = nbPages;
    Page = page;
    NbItems = nbItems;
    ItemsPerPage = itemsPerPage;
  }

  /// <summary>
  /// Number of pages in the API response.
  /// </summary>
  /// <value>Number of pages in the API response.</value>
  [JsonPropertyName("nbPages")]
  public int NbPages { get; set; }

  /// <summary>
  /// Page of the API response to retrieve.
  /// </summary>
  /// <value>Page of the API response to retrieve.</value>
  [JsonPropertyName("page")]
  public int Page { get; set; }

  /// <summary>
  /// Number of items in the API response.
  /// </summary>
  /// <value>Number of items in the API response.</value>
  [JsonPropertyName("nbItems")]
  public int NbItems { get; set; }

  /// <summary>
  /// Number of items per page.
  /// </summary>
  /// <value>Number of items per page.</value>
  [JsonPropertyName("itemsPerPage")]
  public int ItemsPerPage { get; set; }

  /// <summary>
  /// Returns the string presentation of the object
  /// </summary>
  /// <returns>String presentation of the object</returns>
  public override string ToString()
  {
    StringBuilder sb = new StringBuilder();
    sb.Append("class Pagination {\n");
    sb.Append("  NbPages: ").Append(NbPages).Append("\n");
    sb.Append("  Page: ").Append(Page).Append("\n");
    sb.Append("  NbItems: ").Append(NbItems).Append("\n");
    sb.Append("  ItemsPerPage: ").Append(ItemsPerPage).Append("\n");
    sb.Append("}\n");
    return sb.ToString();
  }

  /// <summary>
  /// Returns the JSON string presentation of the object
  /// </summary>
  /// <returns>JSON string presentation of the object</returns>
  public virtual string ToJson()
  {
    return JsonSerializer.Serialize(this, JsonConfig.Options);
  }

  /// <summary>
  /// Returns true if objects are equal
  /// </summary>
  /// <param name="obj">Object to be compared</param>
  /// <returns>Boolean</returns>
  public override bool Equals(object obj)
  {
    if (obj is not Pagination input)
    {
      return false;
    }

    return (NbPages == input.NbPages || NbPages.Equals(input.NbPages))
      && (Page == input.Page || Page.Equals(input.Page))
      && (NbItems == input.NbItems || NbItems.Equals(input.NbItems))
      && (ItemsPerPage == input.ItemsPerPage || ItemsPerPage.Equals(input.ItemsPerPage));
  }

  /// <summary>
  /// Gets the hash code
  /// </summary>
  /// <returns>Hash code</returns>
  public override int GetHashCode()
  {
    unchecked // Overflow is fine, just wrap
    {
      int hashCode = 41;
      hashCode = (hashCode * 59) + NbPages.GetHashCode();
      hashCode = (hashCode * 59) + Page.GetHashCode();
      hashCode = (hashCode * 59) + NbItems.GetHashCode();
      hashCode = (hashCode * 59) + ItemsPerPage.GetHashCode();
      return hashCode;
    }
  }
}
