//
// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
//
using System;
using System.Text;
using System.Linq;
using System.Text.Json.Serialization;
using System.Collections.Generic;
using Algolia.Search.Serializer;
using System.Text.Json;

namespace Algolia.Search.Models.Ingestion;

/// <summary>
/// RunProgress
/// </summary>
public partial class RunProgress
{
  /// <summary>
  /// Initializes a new instance of the RunProgress class.
  /// </summary>
  [JsonConstructor]
  public RunProgress() { }
  /// <summary>
  /// Initializes a new instance of the RunProgress class.
  /// </summary>
  /// <param name="expectedNbOfEvents">expectedNbOfEvents (required).</param>
  /// <param name="receivedNbOfEvents">receivedNbOfEvents (required).</param>
  public RunProgress(int expectedNbOfEvents, int receivedNbOfEvents)
  {
    ExpectedNbOfEvents = expectedNbOfEvents;
    ReceivedNbOfEvents = receivedNbOfEvents;
  }

  /// <summary>
  /// Gets or Sets ExpectedNbOfEvents
  /// </summary>
  [JsonPropertyName("expectedNbOfEvents")]
  public int ExpectedNbOfEvents { get; set; }

  /// <summary>
  /// Gets or Sets ReceivedNbOfEvents
  /// </summary>
  [JsonPropertyName("receivedNbOfEvents")]
  public int ReceivedNbOfEvents { get; set; }

  /// <summary>
  /// Returns the string presentation of the object
  /// </summary>
  /// <returns>String presentation of the object</returns>
  public override string ToString()
  {
    StringBuilder sb = new StringBuilder();
    sb.Append("class RunProgress {\n");
    sb.Append("  ExpectedNbOfEvents: ").Append(ExpectedNbOfEvents).Append("\n");
    sb.Append("  ReceivedNbOfEvents: ").Append(ReceivedNbOfEvents).Append("\n");
    sb.Append("}\n");
    return sb.ToString();
  }

  /// <summary>
  /// Returns the JSON string presentation of the object
  /// </summary>
  /// <returns>JSON string presentation of the object</returns>
  public virtual string ToJson()
  {
    return JsonSerializer.Serialize(this, JsonConfig.Options);
  }

  /// <summary>
  /// Returns true if objects are equal
  /// </summary>
  /// <param name="obj">Object to be compared</param>
  /// <returns>Boolean</returns>
  public override bool Equals(object obj)
  {
    if (obj is not RunProgress input)
    {
      return false;
    }

    return
        (ExpectedNbOfEvents == input.ExpectedNbOfEvents || ExpectedNbOfEvents.Equals(input.ExpectedNbOfEvents)) &&
        (ReceivedNbOfEvents == input.ReceivedNbOfEvents || ReceivedNbOfEvents.Equals(input.ReceivedNbOfEvents));
  }

  /// <summary>
  /// Gets the hash code
  /// </summary>
  /// <returns>Hash code</returns>
  public override int GetHashCode()
  {
    unchecked // Overflow is fine, just wrap
    {
      int hashCode = 41;
      hashCode = (hashCode * 59) + ExpectedNbOfEvents.GetHashCode();
      hashCode = (hashCode * 59) + ReceivedNbOfEvents.GetHashCode();
      return hashCode;
    }
  }

}

