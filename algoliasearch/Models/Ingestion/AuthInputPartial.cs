//
// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
//
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Text;
using System.Text.Json;
using System.Text.Json.Serialization;
using Algolia.Search.Models.Common;
using Algolia.Search.Serializer;

namespace Algolia.Search.Models.Ingestion;

/// <summary>
/// AuthInputPartial
/// </summary>
[JsonConverter(typeof(AuthInputPartialJsonConverter))]
public partial class AuthInputPartial : AbstractSchema
{
  /// <summary>
  /// Initializes a new instance of the AuthInputPartial class
  /// with a AuthGoogleServiceAccountPartial
  /// </summary>
  /// <param name="actualInstance">An instance of AuthGoogleServiceAccountPartial.</param>
  public AuthInputPartial(AuthGoogleServiceAccountPartial actualInstance)
  {
    ActualInstance =
      actualInstance ?? throw new ArgumentException("Invalid instance found. Must not be null.");
  }

  /// <summary>
  /// Initializes a new instance of the AuthInputPartial class
  /// with a AuthBasicPartial
  /// </summary>
  /// <param name="actualInstance">An instance of AuthBasicPartial.</param>
  public AuthInputPartial(AuthBasicPartial actualInstance)
  {
    ActualInstance =
      actualInstance ?? throw new ArgumentException("Invalid instance found. Must not be null.");
  }

  /// <summary>
  /// Initializes a new instance of the AuthInputPartial class
  /// with a AuthAPIKeyPartial
  /// </summary>
  /// <param name="actualInstance">An instance of AuthAPIKeyPartial.</param>
  public AuthInputPartial(AuthAPIKeyPartial actualInstance)
  {
    ActualInstance =
      actualInstance ?? throw new ArgumentException("Invalid instance found. Must not be null.");
  }

  /// <summary>
  /// Initializes a new instance of the AuthInputPartial class
  /// with a AuthOAuthPartial
  /// </summary>
  /// <param name="actualInstance">An instance of AuthOAuthPartial.</param>
  public AuthInputPartial(AuthOAuthPartial actualInstance)
  {
    ActualInstance =
      actualInstance ?? throw new ArgumentException("Invalid instance found. Must not be null.");
  }

  /// <summary>
  /// Initializes a new instance of the AuthInputPartial class
  /// with a AuthAlgoliaPartial
  /// </summary>
  /// <param name="actualInstance">An instance of AuthAlgoliaPartial.</param>
  public AuthInputPartial(AuthAlgoliaPartial actualInstance)
  {
    ActualInstance =
      actualInstance ?? throw new ArgumentException("Invalid instance found. Must not be null.");
  }

  /// <summary>
  /// Initializes a new instance of the AuthInputPartial class
  /// with a AuthAlgoliaInsightsPartial
  /// </summary>
  /// <param name="actualInstance">An instance of AuthAlgoliaInsightsPartial.</param>
  public AuthInputPartial(AuthAlgoliaInsightsPartial actualInstance)
  {
    ActualInstance =
      actualInstance ?? throw new ArgumentException("Invalid instance found. Must not be null.");
  }

  /// <summary>
  /// Initializes a new instance of the AuthInputPartial class
  /// with a Dictionary{string, string}
  /// </summary>
  /// <param name="actualInstance">An instance of Dictionary<string, string>.</param>
  public AuthInputPartial(Dictionary<string, string> actualInstance)
  {
    ActualInstance = actualInstance;
  }

  /// <summary>
  /// Gets or Sets ActualInstance
  /// </summary>
  public sealed override object ActualInstance { get; set; }

  /// <summary>
  /// Get the actual instance of `AuthGoogleServiceAccountPartial`. If the actual instance is not `AuthGoogleServiceAccountPartial`,
  /// the InvalidClassException will be thrown
  /// </summary>
  /// <returns>An instance of AuthGoogleServiceAccountPartial</returns>
  public AuthGoogleServiceAccountPartial AsAuthGoogleServiceAccountPartial()
  {
    return (AuthGoogleServiceAccountPartial)ActualInstance;
  }

  /// <summary>
  /// Get the actual instance of `AuthBasicPartial`. If the actual instance is not `AuthBasicPartial`,
  /// the InvalidClassException will be thrown
  /// </summary>
  /// <returns>An instance of AuthBasicPartial</returns>
  public AuthBasicPartial AsAuthBasicPartial()
  {
    return (AuthBasicPartial)ActualInstance;
  }

  /// <summary>
  /// Get the actual instance of `AuthAPIKeyPartial`. If the actual instance is not `AuthAPIKeyPartial`,
  /// the InvalidClassException will be thrown
  /// </summary>
  /// <returns>An instance of AuthAPIKeyPartial</returns>
  public AuthAPIKeyPartial AsAuthAPIKeyPartial()
  {
    return (AuthAPIKeyPartial)ActualInstance;
  }

  /// <summary>
  /// Get the actual instance of `AuthOAuthPartial`. If the actual instance is not `AuthOAuthPartial`,
  /// the InvalidClassException will be thrown
  /// </summary>
  /// <returns>An instance of AuthOAuthPartial</returns>
  public AuthOAuthPartial AsAuthOAuthPartial()
  {
    return (AuthOAuthPartial)ActualInstance;
  }

  /// <summary>
  /// Get the actual instance of `AuthAlgoliaPartial`. If the actual instance is not `AuthAlgoliaPartial`,
  /// the InvalidClassException will be thrown
  /// </summary>
  /// <returns>An instance of AuthAlgoliaPartial</returns>
  public AuthAlgoliaPartial AsAuthAlgoliaPartial()
  {
    return (AuthAlgoliaPartial)ActualInstance;
  }

  /// <summary>
  /// Get the actual instance of `AuthAlgoliaInsightsPartial`. If the actual instance is not `AuthAlgoliaInsightsPartial`,
  /// the InvalidClassException will be thrown
  /// </summary>
  /// <returns>An instance of AuthAlgoliaInsightsPartial</returns>
  public AuthAlgoliaInsightsPartial AsAuthAlgoliaInsightsPartial()
  {
    return (AuthAlgoliaInsightsPartial)ActualInstance;
  }

  /// <summary>
  /// Get the actual instance of `Dictionary{string, string}`. If the actual instance is not `Dictionary{string, string}`,
  /// the InvalidClassException will be thrown
  /// </summary>
  /// <returns>An instance of Dictionary&lt;string, string&gt;</returns>
  public Dictionary<string, string> AsDictionaryString()
  {
    return (Dictionary<string, string>)ActualInstance;
  }

  /// <summary>
  /// Check if the actual instance is of `AuthGoogleServiceAccountPartial` type.
  /// </summary>
  /// <returns>Whether or not the instance is the type</returns>
  public bool IsAuthGoogleServiceAccountPartial()
  {
    return ActualInstance.GetType() == typeof(AuthGoogleServiceAccountPartial);
  }

  /// <summary>
  /// Check if the actual instance is of `AuthBasicPartial` type.
  /// </summary>
  /// <returns>Whether or not the instance is the type</returns>
  public bool IsAuthBasicPartial()
  {
    return ActualInstance.GetType() == typeof(AuthBasicPartial);
  }

  /// <summary>
  /// Check if the actual instance is of `AuthAPIKeyPartial` type.
  /// </summary>
  /// <returns>Whether or not the instance is the type</returns>
  public bool IsAuthAPIKeyPartial()
  {
    return ActualInstance.GetType() == typeof(AuthAPIKeyPartial);
  }

  /// <summary>
  /// Check if the actual instance is of `AuthOAuthPartial` type.
  /// </summary>
  /// <returns>Whether or not the instance is the type</returns>
  public bool IsAuthOAuthPartial()
  {
    return ActualInstance.GetType() == typeof(AuthOAuthPartial);
  }

  /// <summary>
  /// Check if the actual instance is of `AuthAlgoliaPartial` type.
  /// </summary>
  /// <returns>Whether or not the instance is the type</returns>
  public bool IsAuthAlgoliaPartial()
  {
    return ActualInstance.GetType() == typeof(AuthAlgoliaPartial);
  }

  /// <summary>
  /// Check if the actual instance is of `AuthAlgoliaInsightsPartial` type.
  /// </summary>
  /// <returns>Whether or not the instance is the type</returns>
  public bool IsAuthAlgoliaInsightsPartial()
  {
    return ActualInstance.GetType() == typeof(AuthAlgoliaInsightsPartial);
  }

  /// <summary>
  /// Check if the actual instance is of `Dictionary{string, string}` type.
  /// </summary>
  /// <returns>Whether or not the instance is the type</returns>
  public bool IsDictionaryString()
  {
    return ActualInstance.GetType() == typeof(Dictionary<string, string>);
  }

  /// <summary>
  /// Returns the string presentation of the object
  /// </summary>
  /// <returns>String presentation of the object</returns>
  public override string ToString()
  {
    var sb = new StringBuilder();
    sb.Append("class AuthInputPartial {\n");
    sb.Append("  ActualInstance: ").Append(ActualInstance).Append("\n");
    sb.Append("}\n");
    return sb.ToString();
  }

  /// <summary>
  /// Returns the JSON string presentation of the object
  /// </summary>
  /// <returns>JSON string presentation of the object</returns>
  public override string ToJson()
  {
    return JsonSerializer.Serialize(ActualInstance, JsonConfig.Options);
  }

  /// <summary>
  /// Returns true if objects are equal
  /// </summary>
  /// <param name="obj">Object to be compared</param>
  /// <returns>Boolean</returns>
  public override bool Equals(object obj)
  {
    if (obj is not AuthInputPartial input)
    {
      return false;
    }

    return ActualInstance.Equals(input.ActualInstance);
  }

  /// <summary>
  /// Gets the hash code
  /// </summary>
  /// <returns>Hash code</returns>
  public override int GetHashCode()
  {
    unchecked // Overflow is fine, just wrap
    {
      int hashCode = 41;
      if (ActualInstance != null)
        hashCode = hashCode * 59 + ActualInstance.GetHashCode();
      return hashCode;
    }
  }
}

/// <summary>
/// Custom JSON converter for AuthInputPartial
/// </summary>
public class AuthInputPartialJsonConverter : JsonConverter<AuthInputPartial>
{
  /// <summary>
  /// Check if the object can be converted
  /// </summary>
  /// <param name="objectType">Object type</param>
  /// <returns>True if the object can be converted</returns>
  public override bool CanConvert(Type objectType)
  {
    return objectType == typeof(AuthInputPartial);
  }

  /// <summary>
  /// To convert a JSON string into an object
  /// </summary>
  /// <param name="reader">JSON reader</param>
  /// <param name="typeToConvert">Object type</param>
  /// <param name="options">Serializer options</param>
  /// <returns>The object converted from the JSON string</returns>
  public override AuthInputPartial Read(
    ref Utf8JsonReader reader,
    Type typeToConvert,
    JsonSerializerOptions options
  )
  {
    var jsonDocument = JsonDocument.ParseValue(ref reader);
    var root = jsonDocument.RootElement;
    if (root.ValueKind == JsonValueKind.Object && root.TryGetProperty("clientEmail", out _))
    {
      try
      {
        return new AuthInputPartial(
          jsonDocument.Deserialize<AuthGoogleServiceAccountPartial>(JsonConfig.Options)
        );
      }
      catch (Exception exception)
      {
        // deserialization failed, try the next one
        System.Diagnostics.Debug.WriteLine(
          $"Failed to deserialize into AuthGoogleServiceAccountPartial: {exception}"
        );
      }
    }
    if (root.ValueKind == JsonValueKind.Object && root.TryGetProperty("username", out _))
    {
      try
      {
        return new AuthInputPartial(jsonDocument.Deserialize<AuthBasicPartial>(JsonConfig.Options));
      }
      catch (Exception exception)
      {
        // deserialization failed, try the next one
        System.Diagnostics.Debug.WriteLine(
          $"Failed to deserialize into AuthBasicPartial: {exception}"
        );
      }
    }
    if (root.ValueKind == JsonValueKind.Object && root.TryGetProperty("key", out _))
    {
      try
      {
        return new AuthInputPartial(
          jsonDocument.Deserialize<AuthAPIKeyPartial>(JsonConfig.Options)
        );
      }
      catch (Exception exception)
      {
        // deserialization failed, try the next one
        System.Diagnostics.Debug.WriteLine(
          $"Failed to deserialize into AuthAPIKeyPartial: {exception}"
        );
      }
    }
    if (root.ValueKind == JsonValueKind.Object && root.TryGetProperty("url", out _))
    {
      try
      {
        return new AuthInputPartial(jsonDocument.Deserialize<AuthOAuthPartial>(JsonConfig.Options));
      }
      catch (Exception exception)
      {
        // deserialization failed, try the next one
        System.Diagnostics.Debug.WriteLine(
          $"Failed to deserialize into AuthOAuthPartial: {exception}"
        );
      }
    }
    if (root.ValueKind == JsonValueKind.Object)
    {
      try
      {
        return new AuthInputPartial(
          jsonDocument.Deserialize<AuthAlgoliaPartial>(JsonConfig.Options)
        );
      }
      catch (Exception exception)
      {
        // deserialization failed, try the next one
        System.Diagnostics.Debug.WriteLine(
          $"Failed to deserialize into AuthAlgoliaPartial: {exception}"
        );
      }
    }
    if (root.ValueKind == JsonValueKind.Object)
    {
      try
      {
        return new AuthInputPartial(
          jsonDocument.Deserialize<AuthAlgoliaInsightsPartial>(JsonConfig.Options)
        );
      }
      catch (Exception exception)
      {
        // deserialization failed, try the next one
        System.Diagnostics.Debug.WriteLine(
          $"Failed to deserialize into AuthAlgoliaInsightsPartial: {exception}"
        );
      }
    }
    if (root.ValueKind == JsonValueKind.Object)
    {
      try
      {
        return new AuthInputPartial(
          jsonDocument.Deserialize<Dictionary<string, string>>(JsonConfig.Options)
        );
      }
      catch (Exception exception)
      {
        // deserialization failed, try the next one
        System.Diagnostics.Debug.WriteLine(
          $"Failed to deserialize into Dictionary<string, string>: {exception}"
        );
      }
    }
    throw new InvalidDataException(
      $"The JSON string cannot be deserialized into any schema defined."
    );
  }

  /// <summary>
  /// To write the JSON string
  /// </summary>
  /// <param name="writer">JSON writer</param>
  /// <param name="value">AuthInputPartial to be converted into a JSON string</param>
  /// <param name="options">JSON Serializer options</param>
  public override void Write(
    Utf8JsonWriter writer,
    AuthInputPartial value,
    JsonSerializerOptions options
  )
  {
    writer.WriteRawValue(value.ToJson());
  }
}
