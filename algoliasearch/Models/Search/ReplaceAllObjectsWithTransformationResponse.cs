//
// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
//
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Text.Json;
using System.Text.Json.Serialization;
using Algolia.Search.Serializer;

namespace Algolia.Search.Models.Search;

/// <summary>
/// ReplaceAllObjectsWithTransformationResponse
/// </summary>
public partial class ReplaceAllObjectsWithTransformationResponse
{
  /// <summary>
  /// Initializes a new instance of the ReplaceAllObjectsWithTransformationResponse class.
  /// </summary>
  [JsonConstructor]
  public ReplaceAllObjectsWithTransformationResponse() { }

  /// <summary>
  /// Initializes a new instance of the ReplaceAllObjectsWithTransformationResponse class.
  /// </summary>
  /// <param name="copyOperationResponse">copyOperationResponse (required).</param>
  /// <param name="watchResponses">The response of the `push` request(s). (required).</param>
  /// <param name="moveOperationResponse">moveOperationResponse (required).</param>
  public ReplaceAllObjectsWithTransformationResponse(
    UpdatedAtResponse copyOperationResponse,
    List<WatchResponse> watchResponses,
    UpdatedAtResponse moveOperationResponse
  )
  {
    CopyOperationResponse =
      copyOperationResponse ?? throw new ArgumentNullException(nameof(copyOperationResponse));
    WatchResponses = watchResponses ?? throw new ArgumentNullException(nameof(watchResponses));
    MoveOperationResponse =
      moveOperationResponse ?? throw new ArgumentNullException(nameof(moveOperationResponse));
  }

  /// <summary>
  /// Gets or Sets CopyOperationResponse
  /// </summary>
  [JsonPropertyName("copyOperationResponse")]
  public UpdatedAtResponse CopyOperationResponse { get; set; }

  /// <summary>
  /// The response of the `push` request(s).
  /// </summary>
  /// <value>The response of the `push` request(s).</value>
  [JsonPropertyName("watchResponses")]
  public List<WatchResponse> WatchResponses { get; set; }

  /// <summary>
  /// Gets or Sets MoveOperationResponse
  /// </summary>
  [JsonPropertyName("moveOperationResponse")]
  public UpdatedAtResponse MoveOperationResponse { get; set; }

  /// <summary>
  /// Returns the string presentation of the object
  /// </summary>
  /// <returns>String presentation of the object</returns>
  public override string ToString()
  {
    StringBuilder sb = new StringBuilder();
    sb.Append("class ReplaceAllObjectsWithTransformationResponse {\n");
    sb.Append("  CopyOperationResponse: ").Append(CopyOperationResponse).Append("\n");
    sb.Append("  WatchResponses: ").Append(WatchResponses).Append("\n");
    sb.Append("  MoveOperationResponse: ").Append(MoveOperationResponse).Append("\n");
    sb.Append("}\n");
    return sb.ToString();
  }

  /// <summary>
  /// Returns the JSON string presentation of the object
  /// </summary>
  /// <returns>JSON string presentation of the object</returns>
  public virtual string ToJson()
  {
    return JsonSerializer.Serialize(this, JsonConfig.Options);
  }

  /// <summary>
  /// Returns true if objects are equal
  /// </summary>
  /// <param name="obj">Object to be compared</param>
  /// <returns>Boolean</returns>
  public override bool Equals(object obj)
  {
    if (obj is not ReplaceAllObjectsWithTransformationResponse input)
    {
      return false;
    }

    return (
        CopyOperationResponse == input.CopyOperationResponse
        || (
          CopyOperationResponse != null && CopyOperationResponse.Equals(input.CopyOperationResponse)
        )
      )
      && (
        WatchResponses == input.WatchResponses
        || WatchResponses != null
          && input.WatchResponses != null
          && WatchResponses.SequenceEqual(input.WatchResponses)
      )
      && (
        MoveOperationResponse == input.MoveOperationResponse
        || (
          MoveOperationResponse != null && MoveOperationResponse.Equals(input.MoveOperationResponse)
        )
      );
  }

  /// <summary>
  /// Gets the hash code
  /// </summary>
  /// <returns>Hash code</returns>
  public override int GetHashCode()
  {
    unchecked // Overflow is fine, just wrap
    {
      int hashCode = 41;
      if (CopyOperationResponse != null)
      {
        hashCode = (hashCode * 59) + CopyOperationResponse.GetHashCode();
      }
      if (WatchResponses != null)
      {
        hashCode = (hashCode * 59) + WatchResponses.GetHashCode();
      }
      if (MoveOperationResponse != null)
      {
        hashCode = (hashCode * 59) + MoveOperationResponse.GetHashCode();
      }
      return hashCode;
    }
  }
}
