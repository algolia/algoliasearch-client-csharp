//
// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
//
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Text.Json;
using System.Text.Json.Serialization;
using Algolia.Search.Serializer;

namespace Algolia.Search.Models.Search;

/// <summary>
/// Request body for retrieving records.
/// </summary>
public partial class GetObjectsRequest
{
  /// <summary>
  /// Initializes a new instance of the GetObjectsRequest class.
  /// </summary>
  [JsonConstructor]
  public GetObjectsRequest() { }

  /// <summary>
  /// Initializes a new instance of the GetObjectsRequest class.
  /// </summary>
  /// <param name="objectID">Object ID for the record to retrieve. (required).</param>
  /// <param name="indexName">Index from which to retrieve the records. (required).</param>
  public GetObjectsRequest(string objectID, string indexName)
  {
    ObjectID = objectID ?? throw new ArgumentNullException(nameof(objectID));
    IndexName = indexName ?? throw new ArgumentNullException(nameof(indexName));
  }

  /// <summary>
  /// Attributes to retrieve. If not specified, all retrievable attributes are returned.
  /// </summary>
  /// <value>Attributes to retrieve. If not specified, all retrievable attributes are returned. </value>
  [JsonPropertyName("attributesToRetrieve")]
  public List<string> AttributesToRetrieve { get; set; }

  /// <summary>
  /// Object ID for the record to retrieve.
  /// </summary>
  /// <value>Object ID for the record to retrieve.</value>
  [JsonPropertyName("objectID")]
  public string ObjectID { get; set; }

  /// <summary>
  /// Index from which to retrieve the records.
  /// </summary>
  /// <value>Index from which to retrieve the records.</value>
  [JsonPropertyName("indexName")]
  public string IndexName { get; set; }

  /// <summary>
  /// Returns the string presentation of the object
  /// </summary>
  /// <returns>String presentation of the object</returns>
  public override string ToString()
  {
    StringBuilder sb = new StringBuilder();
    sb.Append("class GetObjectsRequest {\n");
    sb.Append("  AttributesToRetrieve: ").Append(AttributesToRetrieve).Append("\n");
    sb.Append("  ObjectID: ").Append(ObjectID).Append("\n");
    sb.Append("  IndexName: ").Append(IndexName).Append("\n");
    sb.Append("}\n");
    return sb.ToString();
  }

  /// <summary>
  /// Returns the JSON string presentation of the object
  /// </summary>
  /// <returns>JSON string presentation of the object</returns>
  public virtual string ToJson()
  {
    return JsonSerializer.Serialize(this, JsonConfig.Options);
  }

  /// <summary>
  /// Returns true if objects are equal
  /// </summary>
  /// <param name="obj">Object to be compared</param>
  /// <returns>Boolean</returns>
  public override bool Equals(object obj)
  {
    if (obj is not GetObjectsRequest input)
    {
      return false;
    }

    return (
        AttributesToRetrieve == input.AttributesToRetrieve
        || AttributesToRetrieve != null
          && input.AttributesToRetrieve != null
          && AttributesToRetrieve.SequenceEqual(input.AttributesToRetrieve)
      )
      && (ObjectID == input.ObjectID || (ObjectID != null && ObjectID.Equals(input.ObjectID)))
      && (IndexName == input.IndexName || (IndexName != null && IndexName.Equals(input.IndexName)));
  }

  /// <summary>
  /// Gets the hash code
  /// </summary>
  /// <returns>Hash code</returns>
  public override int GetHashCode()
  {
    unchecked // Overflow is fine, just wrap
    {
      int hashCode = 41;
      if (AttributesToRetrieve != null)
      {
        hashCode = (hashCode * 59) + AttributesToRetrieve.GetHashCode();
      }
      if (ObjectID != null)
      {
        hashCode = (hashCode * 59) + ObjectID.GetHashCode();
      }
      if (IndexName != null)
      {
        hashCode = (hashCode * 59) + IndexName.GetHashCode();
      }
      return hashCode;
    }
  }
}
