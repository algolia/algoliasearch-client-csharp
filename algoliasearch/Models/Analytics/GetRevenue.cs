//
// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
//
using System;
using System.Text;
using System.Linq;
using System.Text.Json.Serialization;
using System.Collections.Generic;
using Algolia.Search.Serializer;
using System.Text.Json;

namespace Algolia.Search.Models.Analytics;

/// <summary>
/// GetRevenue
/// </summary>
public partial class GetRevenue
{
  /// <summary>
  /// Initializes a new instance of the GetRevenue class.
  /// </summary>
  [JsonConstructor]
  public GetRevenue() { }
  /// <summary>
  /// Initializes a new instance of the GetRevenue class.
  /// </summary>
  /// <param name="currencies">Revenue associated with this search: broken down by currency.  (required).</param>
  /// <param name="dates">Daily revenue. (required).</param>
  public GetRevenue(Dictionary<string, CurrencyCode> currencies, List<DailyRevenue> dates)
  {
    Currencies = currencies ?? throw new ArgumentNullException(nameof(currencies));
    Dates = dates ?? throw new ArgumentNullException(nameof(dates));
  }

  /// <summary>
  /// Revenue associated with this search: broken down by currency. 
  /// </summary>
  /// <value>Revenue associated with this search: broken down by currency. </value>
  [JsonPropertyName("currencies")]
  public Dictionary<string, CurrencyCode> Currencies { get; set; }

  /// <summary>
  /// Daily revenue.
  /// </summary>
  /// <value>Daily revenue.</value>
  [JsonPropertyName("dates")]
  public List<DailyRevenue> Dates { get; set; }

  /// <summary>
  /// Returns the string presentation of the object
  /// </summary>
  /// <returns>String presentation of the object</returns>
  public override string ToString()
  {
    StringBuilder sb = new StringBuilder();
    sb.Append("class GetRevenue {\n");
    sb.Append("  Currencies: ").Append(Currencies).Append("\n");
    sb.Append("  Dates: ").Append(Dates).Append("\n");
    sb.Append("}\n");
    return sb.ToString();
  }

  /// <summary>
  /// Returns the JSON string presentation of the object
  /// </summary>
  /// <returns>JSON string presentation of the object</returns>
  public virtual string ToJson()
  {
    return JsonSerializer.Serialize(this, JsonConfig.Options);
  }

  /// <summary>
  /// Returns true if objects are equal
  /// </summary>
  /// <param name="obj">Object to be compared</param>
  /// <returns>Boolean</returns>
  public override bool Equals(object obj)
  {
    if (obj is not GetRevenue input)
    {
      return false;
    }

    return
        (Currencies == input.Currencies || Currencies != null && input.Currencies != null && Currencies.SequenceEqual(input.Currencies)) &&
        (Dates == input.Dates || Dates != null && input.Dates != null && Dates.SequenceEqual(input.Dates));
  }

  /// <summary>
  /// Gets the hash code
  /// </summary>
  /// <returns>Hash code</returns>
  public override int GetHashCode()
  {
    unchecked // Overflow is fine, just wrap
    {
      int hashCode = 41;
      if (Currencies != null)
      {
        hashCode = (hashCode * 59) + Currencies.GetHashCode();
      }
      if (Dates != null)
      {
        hashCode = (hashCode * 59) + Dates.GetHashCode();
      }
      return hashCode;
    }
  }

}

