//
// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
//
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Text.Json;
using System.Text.Json.Serialization;
using Algolia.Search.Serializer;

namespace Algolia.Search.Models.Composition;

/// <summary>
/// Strategy for removing words from the query when it doesn't return any results. This helps to avoid returning empty search results.  - `none`.   No words are removed when a query doesn't return results.  - `lastWords`.   Treat the last (then second to last, then third to last) word as optional,   until there are results or at most 5 words have been removed.  - `firstWords`.   Treat the first (then second, then third) word as optional,   until there are results or at most 5 words have been removed.  - `allOptional`.   Treat all words as optional.  For more information, see [Remove words to improve results](https://www.algolia.com/doc/guides/managing-results/optimize-search-results/empty-or-insufficient-results/in-depth/why-use-remove-words-if-no-results/).
/// </summary>
/// <value>Strategy for removing words from the query when it doesn't return any results. This helps to avoid returning empty search results.  - `none`.   No words are removed when a query doesn't return results.  - `lastWords`.   Treat the last (then second to last, then third to last) word as optional,   until there are results or at most 5 words have been removed.  - `firstWords`.   Treat the first (then second, then third) word as optional,   until there are results or at most 5 words have been removed.  - `allOptional`.   Treat all words as optional.  For more information, see [Remove words to improve results](https://www.algolia.com/doc/guides/managing-results/optimize-search-results/empty-or-insufficient-results/in-depth/why-use-remove-words-if-no-results/). </value>
[JsonConverter(typeof(Serializer.JsonStringEnumConverter<RemoveWordsIfNoResults>))]
public enum RemoveWordsIfNoResults
{
  /// <summary>
  /// Enum None for value: none
  /// </summary>
  [JsonPropertyName("none")]
  None = 1,

  /// <summary>
  /// Enum LastWords for value: lastWords
  /// </summary>
  [JsonPropertyName("lastWords")]
  LastWords = 2,

  /// <summary>
  /// Enum FirstWords for value: firstWords
  /// </summary>
  [JsonPropertyName("firstWords")]
  FirstWords = 3,

  /// <summary>
  /// Enum AllOptional for value: allOptional
  /// </summary>
  [JsonPropertyName("allOptional")]
  AllOptional = 4,
}
