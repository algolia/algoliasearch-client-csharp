//
// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
//
using System;
using System.Text;
using System.Linq;
using System.Text.Json.Serialization;
using System.Collections.Generic;
using Algolia.Search.Serializer;
using System.Text.Json;

namespace Algolia.Search.Models.Recommend;

/// <summary>
/// Banner with image and link to redirect users.
/// </summary>
public partial class Banner
{
  /// <summary>
  /// Initializes a new instance of the Banner class.
  /// </summary>
  public Banner()
  {
  }

  /// <summary>
  /// Gets or Sets Image
  /// </summary>
  [JsonPropertyName("image")]
  public BannerImage Image { get; set; }

  /// <summary>
  /// Gets or Sets Link
  /// </summary>
  [JsonPropertyName("link")]
  public BannerLink Link { get; set; }

  /// <summary>
  /// Returns the string presentation of the object
  /// </summary>
  /// <returns>String presentation of the object</returns>
  public override string ToString()
  {
    StringBuilder sb = new StringBuilder();
    sb.Append("class Banner {\n");
    sb.Append("  Image: ").Append(Image).Append("\n");
    sb.Append("  Link: ").Append(Link).Append("\n");
    sb.Append("}\n");
    return sb.ToString();
  }

  /// <summary>
  /// Returns the JSON string presentation of the object
  /// </summary>
  /// <returns>JSON string presentation of the object</returns>
  public virtual string ToJson()
  {
    return JsonSerializer.Serialize(this, JsonConfig.Options);
  }

  /// <summary>
  /// Returns true if objects are equal
  /// </summary>
  /// <param name="obj">Object to be compared</param>
  /// <returns>Boolean</returns>
  public override bool Equals(object obj)
  {
    if (obj is not Banner input)
    {
      return false;
    }

    return
        (Image == input.Image || (Image != null && Image.Equals(input.Image))) &&
        (Link == input.Link || (Link != null && Link.Equals(input.Link)));
  }

  /// <summary>
  /// Gets the hash code
  /// </summary>
  /// <returns>Hash code</returns>
  public override int GetHashCode()
  {
    unchecked // Overflow is fine, just wrap
    {
      int hashCode = 41;
      if (Image != null)
      {
        hashCode = (hashCode * 59) + Image.GetHashCode();
      }
      if (Link != null)
      {
        hashCode = (hashCode * 59) + Link.GetHashCode();
      }
      return hashCode;
    }
  }

}

